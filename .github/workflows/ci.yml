name: e2e
on:
  push:
  pull_request:

jobs:
  playwright-e2e:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.47.0-jammy

    services:
      mongo:
        image: mongo:7
        ports: ["27017:27017"]
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand({ ping: 1 })'"
          --health-interval=10s --health-timeout=5s --health-retries=12

    env:
      NODE_ENV: test
      APP_URL: http://127.0.0.1:3000
      MONGODB_URI: mongodb://mongo:27017/ethvault
      SENDGRID_API_KEY: SG.fake_ci_key_just_for_tests     # <-- change this
      CLOUDINARY_CLOUD_NAME: test
      CLOUDINARY_API_KEY: test
      CLOUDINARY_API_SECRET: test
      NEXT_TELEMETRY_DISABLED: "1"

    steps:
      - uses: actions/checkout@v4
      - run: pwd && ls -la
      - run: node -v && npm -v
      - run: npm ci

      # ensure test tools exist in CI only (doesn't touch your local)
      - run: npm i -D @playwright/test@1.47.0 start-server-and-test@2.1.0 cross-env@10.0.0
      - run: npx playwright install --with-deps

      # Start dev server and run Playwright without needing a script in package.json
      # - run: npx -y start-server-and-test "npm run dev" http://127.0.0.1:3000 "npx playwright test"
      - run: npx playwright test

      # artifacts
      - if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore
      - if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results
          if-no-files-found: ignore
